{"version":3,"file":"js/src_pages_playground_tsx.0d8219b93a5e661157ac.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAiD;AAEvB;AASX,QAAQ,CAACG,UAAU,CAAEC,KAAsB,EAAE,CAAC;IAC3D,GAAK,CAAmBH,GAA8B,kBAA9BA,+CAAQ,CAAC,CAAoB,0BAA9CI,IAAI,GAAaJ,GAA8B,KAAzCK,OAAO,GAAIL,GAA8B;IACtD,GAAK,CAAmBA,IAAsB,kBAAtBA,+CAAQ,CAAC,CAAY,kBAAtCM,IAAI,GAAaN,IAAsB,KAAjCO,OAAO,GAAIP,IAAsB;IAC9C,GAAK,CAAyBA,IAAmB,kBAAnBA,+CAAQ,CAAC,CAAS,eAAzCQ,OAAO,GAAgBR,IAAmB,KAAjCS,UAAU,GAAIT,IAAmB;IAEjDC,gDAAS,CAAC,QAAQ,GAAF,CAAC;QACfI,OAAO,CAACD,IAAI;QACZG,OAAO,CAACD,IAAI;IACd,CAAC,EAAE,CAACF;QAAAA,IAAI;QAAEE,IAAI;IAAA,CAAC;IAEfL,gDAAS,CAAC,QAAQ,GAAF,CAAC;QACfS,MAAM,CAACC,OAAO,CAACC,MAAM,CAAC,CAAC;YACrBC,KAAK,EAAE,CAAC;gBACNC,EAAE,EAAE,CAA0D;gBAC9D,EAA0E;gBAC1EC,OAAO,EAAE,CAA2C;YACtD,CAAC;YACD,EAAgD;YAChDC,sBAAsB,EAAE,CAAC;gBAAA,CAAuB;YAAA,CAAC;QACnD,CAAC;QAEDN,MAAM,CAACC,OAAO,CAAC,CAAC;YAAA,CAAuB;YAAE,CAAiC;YAAE,CAAe;QAAA,CAAC,EAAE,QAC7F,CAACM,IAAI,EACJC,SAAS,EACTC,cAAc,EACX,CAAC;YACJ,GAAK,CAACC,WAAW,GAAI,CAQ3B;YACM,GAAK,CAACC,IAAI,GAAGJ,IAAI,IAAIP,MAAM,CAACY,EAAE,IAAIH,cAAc;YAEhD,EAAE,GAAGE,IAAI,EAAE,CAAC;gBACVE,OAAO,CAACC,KAAK,CAAC,CAAuD;gBACrED,OAAO,CAACC,KAAK,CAAC,CAAM,SAAIP,IAAI,EAAE,CAAI,OAAIP,MAAM,CAACY,EAAE,EAAE,CAAS,YAAIP,OAAO;YACvE,CAAC,MAAM,CAAC;gBACNN,UAAU,CAAC,CAAE;YACb,EAA+B;YACjC,CAAC;YAED,EAAsE;YACtE,GAAK,CAACgB,aAAa,GAAG,CAAC;gBACrBC,IAAI,EAAEN,WAAW;gBACjBO,eAAe,EAAE,CAAC;oBAChBC,aAAa,EAAE,KAAK;gBACtB,CAAC;gBACDC,KAAK,EAAE,CAAY;YACrB,CAAC;YAED,GAAK,CAACd,OAAO,GAAGI,cAAc,CAACW,uBAAuB,CAACL,aAAa,EAAER,IAAI,EAAEP,MAAM,CAACY,EAAE;YACrFP,OAAO,CAACgB,MAAM,CAACC,KAAK;QACtB,CAAC;IACH,CAAC,EAAE,CAAC,CAAC;IAEL,MAAM,0EACHC,CAAO;QAACC,SAAS,EAAC,CAAiB;gFACjCC,CAAM,eAAC,CAER,gGACClB,CAAI,sFAEFgB,CAAO,yFACLG,CAAG,YAAE5B,OAAO,4EACZyB,CAAO;QAACI,EAAE,EAAC,CAAY;kFAGzBJ,CAAO,gBAAC,CAET;AAKR,CAAC","sources":["webpack://otaku-site/./src/pages/playground.scss?84cf","webpack://otaku-site/./src/pages/playground.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","import React, {useState, useEffect } from 'react'\r\nimport twoslash from '@typescript/twoslash'\r\nimport './playground.scss'\r\n\r\n// import { Editor } from '../components/editor/editor'\r\n\r\ninterface PlaygroundProps {\r\n  code: string\r\n  lang: string\r\n}\r\n\r\nexport default function Playground (props: PlaygroundProps) {\r\n  const [code, setCode] = useState('console.log(1)\\n\\n')\r\n  const [lang, setLang] = useState('typescript')\r\n  const [loading, setLoading] = useState('loading')\r\n\r\n  useEffect(() => {\r\n    setCode(code)\r\n    setLang(lang)\r\n  }, [code, lang])\r\n\r\n  useEffect(() => {\r\n    window.require.config({\r\n      paths: {\r\n        vs: 'https://typescript.azureedge.net/cdn/4.0.5/monaco/min/vs',\r\n        // vs: 'https://unpkg.com/@typescript-deploys/monaco-editor@4.0.5/min/vs',\r\n        sandbox: 'https://www.typescriptlang.org/js/sandbox',\r\n      },\r\n      // This is something you need for monaco to work\r\n      ignoreDuplicateModules: ['vs/editor/editor.main'],\r\n    })\r\n\r\n    window.require(['vs/editor/editor.main', 'vs/language/typescript/tsWorker', 'sandbox/index'], (\r\n      main,\r\n      _tsWorker,\r\n      sandboxFactory\r\n    ) => {\r\n      const initialCode = `\r\ninterface ButtonProps {\r\n  type: 'primary' | 'success'\r\n}\r\n\r\nconst button: ButtonProps = {\r\n  type: 'danger'\r\n}\r\n`\r\n      const isOK = main && window.ts && sandboxFactory\r\n\r\n      if (!isOK) {\r\n        console.error('Could not get all the dependencies of sandbox set up!')\r\n        console.error('main', !!main, 'ts', !!window.ts, 'sandbox', !!sandbox)\r\n      } else {\r\n        setLoading('')\r\n        // twoslash(initialCode, 'tsx')\r\n      }\r\n\r\n      // Create a sandbox and embed it into the the div #monaco-editor-embed\r\n      const sandboxConfig = {\r\n        text: initialCode,\r\n        compilerOptions: {\r\n          noEmitOnError: false\r\n        },\r\n        domID: 'playground',\r\n      }\r\n\r\n      const sandbox = sandboxFactory.createTypeScriptSandbox(sandboxConfig, main, window.ts)\r\n      sandbox.editor.focus()\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <section className=\"site-playground\">\r\n      <header>\r\n        OTAKU-UI Playground\r\n      </header>\r\n      <main>\r\n        \r\n        <section>\r\n          <div>{loading}</div>\r\n          <section id=\"playground\"></section>\r\n          {/* <Editor code={code} lang={lang}></Editor> */}\r\n        </section>\r\n        <section>\r\n          Example\r\n        </section>\r\n      </main>\r\n    </section>\r\n    \r\n  )\r\n}\r\n"],"names":["React","useState","useEffect","Playground","props","code","setCode","lang","setLang","loading","setLoading","window","require","config","paths","vs","sandbox","ignoreDuplicateModules","main","_tsWorker","sandboxFactory","initialCode","isOK","ts","console","error","sandboxConfig","text","compilerOptions","noEmitOnError","domID","createTypeScriptSandbox","editor","focus","section","className","header","div","id"],"sourceRoot":""}