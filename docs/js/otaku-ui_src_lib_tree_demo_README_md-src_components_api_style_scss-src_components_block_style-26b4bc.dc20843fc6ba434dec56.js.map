{"version":3,"file":"js/otaku-ui_src_lib_tree_demo_README_md-src_components_api_style_scss-src_components_block_style-26b4bc.dc20843fc6ba434dec56.js","mappings":"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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzEU,IADK,CAAL,CAtFE,CALA,eAyKE;AAAI,MAAE,EAAC,wDAAP;AAAgE,YAAQ,EAAC;AAAzE,kBAA8E;AAAG,aAAS,EAAC,eAAb;AAA6B,QAAI,EAAC;AAAlC,kBAClF;AAAM,aAAS,EAAC;AAAhB,IADkF,eAElF;AAAM,mBAAY;AAAlB,SAFkF,CAA9E,0CAzKF,eA8KA,iDAAC,+EAAD;AACE,QAAI,EAAG,KADT;AAEE,QAAI,EAAG,KAFT;AAGE,WAAO,eAAE,iHACL,gEAAS,EAAT,CADK,eAEL,iDAAC,QAAD,OAFK,CAHX;AAOE,QAAI,EAAG;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtDY;AAuDE,SAAK,EAAE;AACLD,MAAAA,IAAI,EAAG,KADF;AAELC,MAAAA,IAAI,EAAG;AAFF;AAvDT,kBA4DF,kEA5DE,eA6DZ,2EAAK;AAAM,aAAS,EAAC;AAAhB,kBACK,iDAAC,mDAAD;AACE,QAAI,EAAG,KADT;AAEE,QAAI,EAAG;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/CU,IADL,CAAL,CA7DY,CA9KA,eA+RE;AAAI,MAAE,EAAC,gBAAP;AAAwB,YAAQ,EAAC;AAAjC,kBAAsC;AAAG,aAAS,EAAC,eAAb;AAA6B,QAAI,EAAC;AAAlC,kBAC1C;AAAM,aAAS,EAAC;AAAhB,IAD0C,eAE1C;AAAM,mBAAY;AAAlB,SAF0C,CAAtC,iBA/RF,eAoSA,iDAAC,+EAAD;AACE,QAAI,EAAG,EADT;AAEE,QAAI,EAAG,KAFT;AAGE,WAAO,eAAE,iHACL,gEAAS,EAAT,CADK,eAEL,iDAAC,QAAD,OAFK,CAHX;AAOE,QAAI,EAAG;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlEY;AAmEE,SAAK,EAAE;AACLD,MAAAA,IAAI,EAAG,KADF;AAELC,MAAAA,IAAI,EAAG;AAFF;AAnET,kBAwEF,2EAAK;AAAM,aAAS,EAAC;AAAhB,kBACL,iDAAC,mDAAD;AACE,QAAI,EAAG,KADT;AAEE,QAAI,EAAG;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3DU,IADK,CAAL,CAxEE,CApSA,eA4aE;AAAI,MAAE,EAAC,KAAP;AAAa,YAAQ,EAAC;AAAtB,kBAA2B;AAAG,aAAS,EAAC,eAAb;AAA6B,QAAI,EAAC;AAAlC,kBAC/B;AAAM,aAAS,EAAC;AAAhB,IAD+B,eAE/B;AAAM,mBAAY;AAAlB,SAF+B,CAA3B,SA5aF,eAgbZ,iHACY,iDAAC,uDAAD;AACE,QAAI,EAAG,EADT;AAEE,QAAI,EAAG;AAFT,IADZ,CAhbY,CADF,eAubI,iDAAC,4CAAD;AAAQ,UAAM,EAAC;AAAf,kBACE,iDAAC,gDAAD;AACM,QAAI,EAAG,KADb;AAEM,SAAK,EAAG;AAFd,IADF,eAGkC,iDAAC,gDAAD;AAC1B,QAAI,EAAG,SADmB;AAE1B,SAAK,EAAG;AAFkB,IAHlC,eAKsC,iDAAC,gDAAD;AAC9B,QAAI,EAAG,SADuB;AAE9B,SAAK,EAAG;AAFsB,IALtC,eAOsC,iDAAC,gDAAD;AAC9B,QAAI,EAAG,MADuB;AAE9B,SAAK,EAAG;AAFsB,IAPtC,CAvbJ,CADF;AAscD;;AAED,iEAAeF,OAAf","sources":["webpack://otaku-site/../otaku-ui/src/lib/tree/demo/README.md"],"sourcesContent":["import { Tree, Checkbox } from 'otaku-ui'\nimport { useState } from 'react'\n  import * as React from 'react'\n  import Block from 'site-component/block/block'\n  import { Api } from 'site-component/api/api'\n  import { HighlightCode, Anchor, AnchorItem } from 'otaku-ui'\n  import { CodeExample } from 'site-component/codeExample/codeExample'\n\nfunction Demo0() {\n  return (\n    <Space>\n      <Button>默认按钮</Button>\n      <Button type=\"primary\">主要按钮</Button>\n      <Button type=\"success\">成功按钮</Button>\n      <Button type=\"warning\">警告按钮</Button>\n      <Button type=\"danger\">错误按钮</Button>\n    </Space>);\n\n}\n\nfunction Demo1() {\n  const arr = [\n  ['top-start', 'top', 'top-end'],\n  ['left-start', '', 'right-start'],\n  ['left', '', 'right'],\n  ['left-end', '', 'right-end'],\n  ['bottom-start', 'bottom', 'bottom-end']];\n\n\n  return (\n    <ul className=\"demo-tooltip\">\n      {\n      arr.map((row, index) => {\n        return (\n          <li index={index} className=\"row\">\n                {\n            row.map((column, columnIndex) => {\n              if (index > 0 && index < 4 && ![0, 2].includes(columnIndex)) {\n                return <span></span>;\n              } else {\n                return (\n                  <Tooltip placement={column} content={column}>\n                          <Button>{column}</Button>\n                        </Tooltip>);\n\n              }\n            })}\n\n            </li>);\n\n      })}\n\n    </ul>);\n\n}\n\nfunction Demo2() {\n  return (\n    <Rate\n    score={59.5}\n    maxScore={100}\n    count={10}\n    readonly\n    textRender={(current, score) => {\n      let text = '不合格';\n\n      if (current <= 6) text = '不合格';else\n      if (current >= 6) text = '及格';else\n      if (current >= 8) text = '优秀';else\n      text = '满分';\n\n      return text;\n    }}></Rate>);\n\n}\n\nfunction Demo3() {\n  const [show, setShow] = useState(false);\n\n  return (\n    <div>\n      <Button type=\"primary\" onClick={() => {\n        setShow(true);\n      }}>图片裁剪</Button>\n      <ImageCropper\n      visible={show}\n      imageURL={miku}\n      onClose={() => setShow(false)}\n      onCancel={() => setShow(false)}\n      onConfirm={() => setShow(false)}>\n      </ImageCropper>\n    </div>);\n\n}\n\nfunction Demo4() {\n  let [progress, setProgress] = useState(0);\n\n  return (\n    <>\n      <InputNumber value={progress} step={10} onChange={(val) => {\n        setProgress(val);\n      }}></InputNumber>\n      <Grid className=\"demo-progress\">\n        <GridItem>\n          <Progress percentage={progress} type=\"circle\"></Progress>\n        </GridItem>\n        <GridItem>\n          <Progress percentage={progress}></Progress>\n        </GridItem>\n        <GridItem>\n          <Progress percentage={progress} direction=\"vertical\"></Progress>\n        </GridItem>\n      </Grid>\n\n    </>);\n\n}\n\nfunction Example5() {\n  const [checkAll, setCheckAll] = useState(false);\n\n  const treeData = [\n  {\n    title: '0-0',\n    key: '0-0',\n    children: [\n    {\n      title: '0-0-0',\n      key: '0-0-0',\n      children: [\n      { title: '0-0-0-0', key: '0-0-0-0' },\n      { title: '0-0-0-1', key: '0-0-0-1' },\n      { title: '0-0-0-2', key: '0-0-0-2' }] },\n\n\n    {\n      title: '0-0-1',\n      key: '0-0-1',\n      children: [\n      { title: '0-0-1-0', key: '0-0-1-0' },\n      { title: '0-0-1-1', key: '0-0-1-1' },\n      { title: '0-0-1-2', key: '0-0-1-2' }] },\n\n\n    {\n      title: '0-0-2',\n      key: '0-0-2' }] },\n\n\n\n  {\n    title: '0-1',\n    key: '0-1',\n    children: [\n    { title: '0-1-0-0', key: '0-1-0-0' },\n    { title: '0-1-0-1', key: '0-1-0-1' },\n    { title: '0-1-0-2', key: '0-1-0-2' }] },\n\n\n  {\n    title: '0-2',\n    key: '0-2' }];\n\n\n\n  return (\n    <>\n     <Checkbox\n      checked={checkAll}\n      onChange={(e) => {\n        setCheckAll(e.target.checked);\n      }}>全选</Checkbox>\n      <Tree\n      checkedAll={checkAll}\n      // defaultExpandAll={true}\n      defaultExpandKeys={['0-0', '0-0-0']}\n      defaultCheckedKeys={['0-0-0-0', '0-0-0-2', '0-0-1', '0-2']}\n      options={{\n        id: 'key',\n        name: 'title',\n        children: 'children' }}\n\n      data={treeData} /> \n    </>);\n\n}\n\nfunction Example6() {\n  const treeData = [\n  {\n    title: '0',\n    key: '0' },\n\n  {\n    title: '1',\n    key: '1' },\n\n  {\n    title: '2',\n    key: '2' }];\n\n\n\n  const load = (node, resolve, reject) => {\n    setTimeout(() => {\n      const data = new Array(10000).fill(undefined).map((item, index) => {\n        return {\n          key: node.name + '-' + index,\n          title: node.name + '-' + index };\n\n      });\n\n      resolve(data);\n    }, 1000);\n\n  };\n\n  return (\n    <Tree\n    options={{\n      id: 'key',\n      name: 'title',\n      children: 'children' }}\n\n    height={100}\n    data={treeData}\n    loadTree={load} />);\n\n}\n\nfunction Example7() {\n  const treeData = [\n  {\n    title: '0-0',\n    key: '0-0',\n    children: [\n    {\n      title: '0-0-0',\n      key: '0-0-0',\n      children: [\n      { title: '0-0-0-0', key: '0-0-0-0' },\n      { title: '0-0-0-1', key: '0-0-0-1' },\n      { title: '0-0-0-2', key: '0-0-0-2' }] },\n\n\n    {\n      title: '0-0-1',\n      key: '0-0-1',\n      children: [\n      { title: '0-0-1-0', key: '0-0-1-0' },\n      { title: '0-0-1-1', key: '0-0-1-1' },\n      { title: '0-0-1-2', key: '0-0-1-2' }] },\n\n\n    {\n      title: '0-0-2',\n      key: '0-0-2' }] },\n\n\n\n  {\n    title: '0-1',\n    key: '0-1',\n    children: [\n    { title: '0-1-0-0', key: '0-1-0-0' },\n    { title: '0-1-0-1', key: '0-1-0-1' },\n    { title: '0-1-0-2', key: '0-1-0-2' }] },\n\n\n  {\n    title: '0-2',\n    key: '0-2' }];\n\n\n\n  return (\n    <Tree options={{\n      id: 'key',\n      name: 'title',\n      children: 'children' }}\n    data={treeData} />);\n\n}\n\n      function MdReact () {\n        return (\n          <>\n            <div className='markdown-body'><h2 id=\"%E5%85%A8%E9%80%89\" tabIndex=\"-1\"><a className=\"header-anchor\" href=\"#%E5%85%A8%E9%80%89\">\n          <span className=\"b-anchor\"></span>\n          <span aria-hidden=\"false\">#</span>\n        </a> 全选</h2>\n\n            <CodeExample\n              desc={``}\n              lang={`tsx`}\n              example={<>\n                  <style>{``}</style>\n                  <Example5 />\n                </>}\n              code={`import { Tree, Checkbox } from 'otaku-ui'\nimport { useState } from 'react'\nfunction Example () {\n  const [checkAll, setCheckAll] = useState(false)\n\n  const treeData = [\n    {\n      title: '0-0',\n      key: '0-0',\n      children: [\n        {\n          title: '0-0-0',\n          key: '0-0-0',\n          children: [\n            { title: '0-0-0-0', key: '0-0-0-0' },\n            { title: '0-0-0-1', key: '0-0-0-1' },\n            { title: '0-0-0-2', key: '0-0-0-2' },\n          ],\n        },\n        {\n          title: '0-0-1',\n          key: '0-0-1',\n          children: [\n            { title: '0-0-1-0', key: '0-0-1-0' },\n            { title: '0-0-1-1', key: '0-0-1-1' },\n            { title: '0-0-1-2', key: '0-0-1-2' },\n          ],\n        },\n        {\n          title: '0-0-2',\n          key: '0-0-2',\n        },\n      ],\n    },\n    {\n      title: '0-1',\n      key: '0-1',\n      children: [\n        { title: '0-1-0-0', key: '0-1-0-0' },\n        { title: '0-1-0-1', key: '0-1-0-1' },\n        { title: '0-1-0-2', key: '0-1-0-2' },\n      ],\n    },\n    {\n      title: '0-2',\n      key: '0-2',\n    },\n  ];\n\n  return (\n    <>\n     <Checkbox \n      checked={checkAll}\n      onChange={e => {\n        setCheckAll(e.target.checked)\n      }}>全选</Checkbox>\n      <Tree \n        checkedAll={checkAll}\n        // defaultExpandAll={true}\n        defaultExpandKeys={['0-0','0-0-0']}\n        defaultCheckedKeys={['0-0-0-0', '0-0-0-2','0-0-1', '0-2']}\n        options={{\n          id: 'key',\n          name: 'title',\n          children: 'children'\n        }}\n      data={treeData}/> \n    </>\n  )\n}\n\n\nReactDOM.createRoot(container).render(<Example/>)\n`}\n              style={{\n                lang: `css`,\n                code: ``\n              }}\n            >\n          <pre><code className=\"language-tsx\">\n          <HighlightCode\n            lang={`tsx`}\n            code={`function Example () {\n  const [checkAll, setCheckAll] = useState(false)\n\n  const treeData = [\n    {\n      title: '0-0',\n      key: '0-0',\n      children: [\n        {\n          title: '0-0-0',\n          key: '0-0-0',\n          children: [\n            { title: '0-0-0-0', key: '0-0-0-0' },\n            { title: '0-0-0-1', key: '0-0-0-1' },\n            { title: '0-0-0-2', key: '0-0-0-2' },\n          ],\n        },\n        {\n          title: '0-0-1',\n          key: '0-0-1',\n          children: [\n            { title: '0-0-1-0', key: '0-0-1-0' },\n            { title: '0-0-1-1', key: '0-0-1-1' },\n            { title: '0-0-1-2', key: '0-0-1-2' },\n          ],\n        },\n        {\n          title: '0-0-2',\n          key: '0-0-2',\n        },\n      ],\n    },\n    {\n      title: '0-1',\n      key: '0-1',\n      children: [\n        { title: '0-1-0-0', key: '0-1-0-0' },\n        { title: '0-1-0-1', key: '0-1-0-1' },\n        { title: '0-1-0-2', key: '0-1-0-2' },\n      ],\n    },\n    {\n      title: '0-2',\n      key: '0-2',\n    },\n  ];\n\n  return (\n    <>\n     <Checkbox \n      checked={checkAll}\n      onChange={e => {\n        setCheckAll(e.target.checked)\n      }}>全选</Checkbox>\n      <Tree \n        checkedAll={checkAll}\n        // defaultExpandAll={true}\n        defaultExpandKeys={['0-0','0-0-0']}\n        defaultCheckedKeys={['0-0-0-0', '0-0-0-2','0-0-1', '0-2']}\n        options={{\n          id: 'key',\n          name: 'title',\n          children: 'children'\n        }}\n      data={treeData}/> \n    </>\n  )\n}\n\n\nReactDOM.createRoot(container).render(<Example/>)\n`} \n          >\n          </HighlightCode>\n      </code></pre>\n</CodeExample><h2 id=\"%E5%BC%82%E6%AD%A5%E5%8A%A0%E8%BD%BD%E7%9A%84%E6%A0%91\" tabIndex=\"-1\"><a className=\"header-anchor\" href=\"#%E5%BC%82%E6%AD%A5%E5%8A%A0%E8%BD%BD%E7%9A%84%E6%A0%91\">\n          <span className=\"b-anchor\"></span>\n          <span aria-hidden=\"false\">#</span>\n        </a> 异步加载的树</h2>\n\n            <CodeExample\n              desc={`234`}\n              lang={`tsx`}\n              example={<>\n                  <style>{``}</style>\n                  <Example6 />\n                </>}\n              code={`import { Tree, Checkbox } from 'otaku-ui'\nimport { useState } from 'react'\nfunction Example () {\n  const treeData = [\n    {\n      title: '0',\n      key: '0',\n    },\n    {\n      title: '1',\n      key: '1',\n    },\n    {\n      title: '2',\n      key: '2',\n    },\n  ];\n\n  const load = (node, resolve, reject) => {\n    setTimeout(() => {\n       const data = new Array(10000).fill(undefined).map((item, index) => {\n        return {\n          key: node.name + '-' + index,\n          title: node.name + '-' + index,\n        }\n      })\n\n      resolve(data)\n    }, 1000)\n\n  }\n\n  return (\n    <Tree \n      options={{\n        id: 'key',\n        name: 'title',\n        children: 'children'\n      }}\n      height={100}\n      data={treeData}\n      loadTree={load}/>\n  )\n}\n\n\nReactDOM.createRoot(container).render(<Example/>)\n`}\n              style={{\n                lang: `css`,\n                code: ``\n              }}\n            >\n          <p>234</p>\n<pre><code className=\"language-tsx\">\n          <HighlightCode\n            lang={`tsx`}\n            code={`function Example () {\n  const treeData = [\n    {\n      title: '0',\n      key: '0',\n    },\n    {\n      title: '1',\n      key: '1',\n    },\n    {\n      title: '2',\n      key: '2',\n    },\n  ];\n\n  const load = (node, resolve, reject) => {\n    setTimeout(() => {\n       const data = new Array(10000).fill(undefined).map((item, index) => {\n        return {\n          key: node.name + '-' + index,\n          title: node.name + '-' + index,\n        }\n      })\n\n      resolve(data)\n    }, 1000)\n\n  }\n\n  return (\n    <Tree \n      options={{\n        id: 'key',\n        name: 'title',\n        children: 'children'\n      }}\n      height={100}\n      data={treeData}\n      loadTree={load}/>\n  )\n}\n\n\nReactDOM.createRoot(container).render(<Example/>)\n`} \n          >\n          </HighlightCode>\n      </code></pre>\n</CodeExample><h2 id=\"tree-%E6%A0%91\" tabIndex=\"-1\"><a className=\"header-anchor\" href=\"#tree-%E6%A0%91\">\n          <span className=\"b-anchor\"></span>\n          <span aria-hidden=\"false\">#</span>\n        </a> Tree 树</h2>\n\n            <CodeExample\n              desc={``}\n              lang={`tsx`}\n              example={<>\n                  <style>{``}</style>\n                  <Example7 />\n                </>}\n              code={`import { Tree, Checkbox } from 'otaku-ui'\nimport { useState } from 'react'\n\nfunction Example () {\n  const treeData = [\n    {\n      title: '0-0',\n      key: '0-0',\n      children: [\n        {\n          title: '0-0-0',\n          key: '0-0-0',\n          children: [\n            { title: '0-0-0-0', key: '0-0-0-0' },\n            { title: '0-0-0-1', key: '0-0-0-1' },\n            { title: '0-0-0-2', key: '0-0-0-2' },\n          ],\n        },\n        {\n          title: '0-0-1',\n          key: '0-0-1',\n          children: [\n            { title: '0-0-1-0', key: '0-0-1-0' },\n            { title: '0-0-1-1', key: '0-0-1-1' },\n            { title: '0-0-1-2', key: '0-0-1-2' },\n          ],\n        },\n        {\n          title: '0-0-2',\n          key: '0-0-2',\n        },\n      ],\n    },\n    {\n      title: '0-1',\n      key: '0-1',\n      children: [\n        { title: '0-1-0-0', key: '0-1-0-0' },\n        { title: '0-1-0-1', key: '0-1-0-1' },\n        { title: '0-1-0-2', key: '0-1-0-2' },\n      ],\n    },\n    {\n      title: '0-2',\n      key: '0-2',\n    },\n  ];\n\n  return (\n    <Tree options={{\n      id: 'key',\n      name: 'title',\n      children: 'children'\n    }} data={treeData}/>\n  )\n}\n\n\nReactDOM.createRoot(container).render(<Example/>)\n`}\n              style={{\n                lang: `css`,\n                code: ``\n              }}\n            >\n          <pre><code className=\"language-tsx\">\n          <HighlightCode\n            lang={`tsx`}\n            code={`\nfunction Example () {\n  const treeData = [\n    {\n      title: '0-0',\n      key: '0-0',\n      children: [\n        {\n          title: '0-0-0',\n          key: '0-0-0',\n          children: [\n            { title: '0-0-0-0', key: '0-0-0-0' },\n            { title: '0-0-0-1', key: '0-0-0-1' },\n            { title: '0-0-0-2', key: '0-0-0-2' },\n          ],\n        },\n        {\n          title: '0-0-1',\n          key: '0-0-1',\n          children: [\n            { title: '0-0-1-0', key: '0-0-1-0' },\n            { title: '0-0-1-1', key: '0-0-1-1' },\n            { title: '0-0-1-2', key: '0-0-1-2' },\n          ],\n        },\n        {\n          title: '0-0-2',\n          key: '0-0-2',\n        },\n      ],\n    },\n    {\n      title: '0-1',\n      key: '0-1',\n      children: [\n        { title: '0-1-0-0', key: '0-1-0-0' },\n        { title: '0-1-0-1', key: '0-1-0-1' },\n        { title: '0-1-0-2', key: '0-1-0-2' },\n      ],\n    },\n    {\n      title: '0-2',\n      key: '0-2',\n    },\n  ];\n\n  return (\n    <Tree options={{\n      id: 'key',\n      name: 'title',\n      children: 'children'\n    }} data={treeData}/>\n  )\n}\n\n\nReactDOM.createRoot(container).render(<Example/>)\n`} \n          >\n          </HighlightCode>\n      </code></pre>\n</CodeExample><h2 id=\"api\" tabIndex=\"-1\"><a className=\"header-anchor\" href=\"#api\">\n          <span className=\"b-anchor\"></span>\n          <span aria-hidden=\"false\">#</span>\n        </a> api</h2>\n<>\n            <Api \n              code={``}\n              data={`[]`}\n              ></Api></></div>\n            \n              <Anchor target=\".main\">\n                <AnchorItem \n                      href={`#全选`}\n                      title={`全选`}></AnchorItem><AnchorItem \n                      href={`#异步加载的树`}\n                      title={`异步加载的树`}></AnchorItem><AnchorItem \n                      href={`#tree-树`}\n                      title={`Tree 树`}></AnchorItem><AnchorItem \n                      href={`#api`}\n                      title={`api`}></AnchorItem>\n              </Anchor>\n            \n          </>\n        )\n      }\n      \n      export default MdReact\n    "],"names":["Tree","Checkbox","useState","React","Block","Api","HighlightCode","Anchor","AnchorItem","CodeExample","Demo0","Demo1","arr","map","row","index","column","columnIndex","includes","Demo2","current","score","text","Demo3","show","setShow","miku","Demo4","progress","setProgress","val","Example5","checkAll","setCheckAll","treeData","title","key","children","e","target","checked","id","name","Example6","load","node","resolve","reject","setTimeout","data","Array","fill","undefined","item","Example7","MdReact","lang","code"],"sourceRoot":""}