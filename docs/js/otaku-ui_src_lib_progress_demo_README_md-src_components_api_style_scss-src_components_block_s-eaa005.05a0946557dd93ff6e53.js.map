{"version":3,"file":"js/otaku-ui_src_lib_progress_demo_README_md-src_components_api_style_scss-src_components_block_s-eaa005.05a0946557dd93ff6e53.js","mappings":"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","sources":["webpack://otaku-site/../otaku-ui/src/lib/progress/demo/README.md"],"sourcesContent":["import { Progress, Grid, GridItem, Button, InputNumber } from 'otaku-ui'\nimport { useState } from 'react'\n  import * as React from 'react'\n  import Block from 'site-component/block/block'\n  import { Api } from 'site-component/api/api'\n  import { HighlightCode, Anchor, AnchorItem } from 'otaku-ui'\n  import { CodeExample } from 'site-component/codeExample/codeExample'\n\nfunction Demo0() {\n  return (\n    <Space>\n      <Button>默认按钮</Button>\n      <Button type=\"primary\">主要按钮</Button>\n      <Button type=\"success\">成功按钮</Button>\n      <Button type=\"warning\">警告按钮</Button>\n      <Button type=\"danger\">错误按钮</Button>\n    </Space>);\n\n}\n\nfunction Demo1() {\n  const arr = [\n  ['top-start', 'top', 'top-end'],\n  ['left-start', '', 'right-start'],\n  ['left', '', 'right'],\n  ['left-end', '', 'right-end'],\n  ['bottom-start', 'bottom', 'bottom-end']];\n\n\n  return (\n    <ul className=\"demo-tooltip\">\n      {\n      arr.map((row, index) => {\n        return (\n          <li index={index} className=\"row\">\n                {\n            row.map((column, columnIndex) => {\n              if (index > 0 && index < 4 && ![0, 2].includes(columnIndex)) {\n                return <span></span>;\n              } else {\n                return (\n                  <Tooltip placement={column} content={column}>\n                          <Button>{column}</Button>\n                        </Tooltip>);\n\n              }\n            })}\n\n            </li>);\n\n      })}\n\n    </ul>);\n\n}\n\nfunction Demo2() {\n  return (\n    <Rate\n    score={59.5}\n    maxScore={100}\n    count={10}\n    readonly\n    textRender={(current, score) => {\n      let text = '不合格';\n\n      if (current <= 6) text = '不合格';else\n      if (current >= 6) text = '及格';else\n      if (current >= 8) text = '优秀';else\n      text = '满分';\n\n      return text;\n    }}></Rate>);\n\n}\n\nfunction Demo3() {\n  const [show, setShow] = useState(false);\n\n  return (\n    <div>\n      <Button type=\"primary\" onClick={() => {\n        setShow(true);\n      }}>图片裁剪</Button>\n      <ImageCropper\n      visible={show}\n      imageURL={miku}\n      onClose={() => setShow(false)}\n      onCancel={() => setShow(false)}\n      onConfirm={() => setShow(false)}>\n      </ImageCropper>\n    </div>);\n\n}\n\nfunction Example4() {\n  const tableData = [\n  {\n    name: 'disabled',\n    required: false,\n    type: 'number',\n    defaultValue: '',\n    desc: '禁用' },\n\n  {\n    name: 'loading',\n    required: false,\n    type: 'number',\n    defaultValue: '',\n    desc: '禁用' },\n\n  {\n    name: 'size',\n    required: false,\n    type: 'small | middle | large',\n    // defaultValue: '',\n    desc: '禁用' }];\n\n\n\n  const tableColumn = [\n  {\n    label: '属性',\n    prop: 'name' },\n\n  {\n    label: '是否必填',\n    prop: 'required',\n    render(data) {\n      const { row } = data;\n\n      return (\n        <span>{row.require ? '是' : '否'}</span>);\n\n    } },\n\n  {\n    label: '类型',\n    prop: 'type' },\n\n  {\n    label: '默认值',\n    prop: 'defaultValue',\n    defaultValue: '这是没有数据的情况' },\n\n  {\n    label: '描述',\n    prop: 'desc' }];\n\n\n\n  return (\n    <Table data={tableData} tableColumn={tableColumn}></Table>);\n\n}\n\nfunction Demo5() {\n  let [progress, setProgress] = useState(0);\n\n  return (\n    <>\n      <InputNumber value={progress} step={10} onChange={(val) => {\n        setProgress(val);\n      }}></InputNumber>\n      <Grid className=\"demo-progress\">\n        <GridItem>\n          <Progress percentage={progress} type=\"circle\"></Progress>\n        </GridItem>\n        <GridItem>\n          <Progress percentage={progress}></Progress>\n        </GridItem>\n        <GridItem>\n          <Progress percentage={progress} direction=\"vertical\"></Progress>\n        </GridItem>\n      </Grid>\n\n    </>);\n\n}\n\n      function MdReact () {\n        return (\n          <>\n            <div className='markdown-body'><h2 id=\"progress-%E8%BF%9B%E5%BA%A6%E6%9D%A1\" tabIndex=\"-1\"><a className=\"header-anchor\" href=\"#progress-%E8%BF%9B%E5%BA%A6%E6%9D%A1\">\n          <span className=\"b-anchor\"></span>\n          <span aria-hidden=\"false\">#</span>\n        </a> Progress 进度条</h2>\n\n            <CodeExample\n              desc={``}\n              lang={`tsx`}\n              example={<>\n                  <style>{``}</style>\n                  <Progress></Progress>\n                </>}\n              code={`import { Progress, Grid, GridItem, Button, InputNumber } from 'otaku-ui'\nimport { useState } from 'react'\nReactDOM.createRoot(container).render(<Progress></Progress>)\n`}\n              style={{\n                lang: `css`,\n                code: ``\n              }}\n            >\n          <pre><code className=\"language-tsx\">\n          <HighlightCode\n            lang={`tsx`}\n            code={`ReactDOM.createRoot(container).render(<Progress></Progress>)\n`} \n          >\n          </HighlightCode>\n      </code></pre>\n</CodeExample><h2 id=\"%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%87%E5%AD%97\" tabIndex=\"-1\"><a className=\"header-anchor\" href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%87%E5%AD%97\">\n          <span className=\"b-anchor\"></span>\n          <span aria-hidden=\"false\">#</span>\n        </a> 自定义文字</h2>\n\n            <CodeExample\n              desc={``}\n              lang={`tsx`}\n              example={<>\n                  <style>{``}</style>\n                  <Progress>10%</Progress>\n                </>}\n              code={`import { Progress, Grid, GridItem, Button, InputNumber } from 'otaku-ui'\nimport { useState } from 'react'\nReactDOM.createRoot(container).render(<Progress>10%</Progress>)\n`}\n              style={{\n                lang: `css`,\n                code: ``\n              }}\n            >\n          <pre><code className=\"language-tsx\">\n          <HighlightCode\n            lang={`tsx`}\n            code={`ReactDOM.createRoot(container).render(<Progress>10%</Progress>)\n`} \n          >\n          </HighlightCode>\n      </code></pre>\n</CodeExample><h2 id=\"%E8%BF%9B%E5%BA%A6%E6%9D%A1%E5%86%85%E6%98%BE%E7%A4%BA%E6%96%87%E5%AD%97\" tabIndex=\"-1\"><a className=\"header-anchor\" href=\"#%E8%BF%9B%E5%BA%A6%E6%9D%A1%E5%86%85%E6%98%BE%E7%A4%BA%E6%96%87%E5%AD%97\">\n          <span className=\"b-anchor\"></span>\n          <span aria-hidden=\"false\">#</span>\n        </a> 进度条内显示文字</h2>\n\n            <CodeExample\n              desc={``}\n              lang={`tsx`}\n              example={<>\n                  <style>{``}</style>\n                  <Progress inner percentage={50}>50%</Progress>\n                </>}\n              code={`import { Progress, Grid, GridItem, Button, InputNumber } from 'otaku-ui'\nimport { useState } from 'react'\nReactDOM.createRoot(container).render(<Progress inner percentage={50}>50%</Progress>)\n`}\n              style={{\n                lang: `css`,\n                code: ``\n              }}\n            >\n          <pre><code className=\"language-tsx\">\n          <HighlightCode\n            lang={`tsx`}\n            code={`ReactDOM.createRoot(container).render(<Progress inner percentage={50}>50%</Progress>)\n`} \n          >\n          </HighlightCode>\n      </code></pre>\n</CodeExample><h2 id=\"%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A2%9C%E8%89%B2\" tabIndex=\"-1\"><a className=\"header-anchor\" href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A2%9C%E8%89%B2\">\n          <span className=\"b-anchor\"></span>\n          <span aria-hidden=\"false\">#</span>\n        </a> 自定义颜色</h2>\n\n            <CodeExample\n              desc={``}\n              lang={`tsx`}\n              example={<>\n                  <style>{``}</style>\n                  <Progress inner percentage={50} color=\"red\">50%</Progress>\n                </>}\n              code={`import { Progress, Grid, GridItem, Button, InputNumber } from 'otaku-ui'\nimport { useState } from 'react'\nReactDOM.createRoot(container).render(<Progress inner percentage={50} color=\"red\">50%</Progress>)\n`}\n              style={{\n                lang: `css`,\n                code: ``\n              }}\n            >\n          <pre><code className=\"language-tsx\">\n          <HighlightCode\n            lang={`tsx`}\n            code={`ReactDOM.createRoot(container).render(<Progress inner percentage={50} color=\"red\">50%</Progress>)\n`} \n          >\n          </HighlightCode>\n      </code></pre>\n</CodeExample><h2 id=\"%E5%9E%82%E7%9B%B4%E7%9A%84%E8%BF%9B%E5%BA%A6%E6%9D%A1\" tabIndex=\"-1\"><a className=\"header-anchor\" href=\"#%E5%9E%82%E7%9B%B4%E7%9A%84%E8%BF%9B%E5%BA%A6%E6%9D%A1\">\n          <span className=\"b-anchor\"></span>\n          <span aria-hidden=\"false\">#</span>\n        </a> 垂直的进度条</h2>\n\n            <CodeExample\n              desc={``}\n              lang={`tsx`}\n              example={<>\n                  <style>{``}</style>\n                  <Grid>\n    <GridItem>\n      <Progress inner percentage={50} color=\"red\" direction=\"vertical\">50%</Progress>\n    </GridItem>\n    <GridItem>\n      <Progress percentage={50} direction=\"vertical\">50%</Progress>\n    </GridItem>\n  </Grid>\n                </>}\n              code={`import { Progress, Grid, GridItem, Button, InputNumber } from 'otaku-ui'\nimport { useState } from 'react'\nReactDOM.createRoot(container).render(<Grid>\n    <GridItem>\n      <Progress inner percentage={50} color=\"red\" direction=\"vertical\">50%</Progress>\n    </GridItem>\n    <GridItem>\n      <Progress percentage={50}  direction=\"vertical\">50%</Progress>\n    </GridItem>\n  </Grid>)\n`}\n              style={{\n                lang: `css`,\n                code: ``\n              }}\n            >\n          <pre><code className=\"language-tsx\">\n          <HighlightCode\n            lang={`tsx`}\n            code={`ReactDOM.createRoot(container).render(<Grid>\n    <GridItem>\n      <Progress inner percentage={50} color=\"red\" direction=\"vertical\">50%</Progress>\n    </GridItem>\n    <GridItem>\n      <Progress percentage={50}  direction=\"vertical\">50%</Progress>\n    </GridItem>\n  </Grid>)\n`} \n          >\n          </HighlightCode>\n      </code></pre>\n</CodeExample><h2 id=\"%E5%9C%86%E5%BD%A2%E8%BF%9B%E5%BA%A6%E6%9D%A1\" tabIndex=\"-1\"><a className=\"header-anchor\" href=\"#%E5%9C%86%E5%BD%A2%E8%BF%9B%E5%BA%A6%E6%9D%A1\">\n          <span className=\"b-anchor\"></span>\n          <span aria-hidden=\"false\">#</span>\n        </a> 圆形进度条</h2>\n\n            <CodeExample\n              desc={``}\n              lang={`tsx`}\n              example={<>\n                  <style>{``}</style>\n                  <Grid>\n    <GridItem>\n      <Progress percentage={50} type=\"circle\">50%</Progress>\n    </GridItem>\n    <GridItem>\n      <Progress percentage={20} type=\"circle\">20%</Progress>\n    </GridItem>\n    <GridItem>\n      <Progress percentage={90} type=\"circle\">90%</Progress>\n    </GridItem>\n  </Grid>\n                </>}\n              code={`import { Progress, Grid, GridItem, Button, InputNumber } from 'otaku-ui'\nimport { useState } from 'react'\n\nReactDOM.createRoot(container).render(<Grid>\n    <GridItem>\n      <Progress percentage={50}  type=\"circle\">50%</Progress>\n    </GridItem>\n    <GridItem>\n      <Progress percentage={20}  type=\"circle\">20%</Progress>\n    </GridItem>\n    <GridItem>\n      <Progress percentage={90}  type=\"circle\" >90%</Progress>\n    </GridItem>\n  </Grid>)\n`}\n              style={{\n                lang: `css`,\n                code: ``\n              }}\n            >\n          <pre><code className=\"language-tsx\">\n          <HighlightCode\n            lang={`tsx`}\n            code={`\nReactDOM.createRoot(container).render(<Grid>\n    <GridItem>\n      <Progress percentage={50}  type=\"circle\">50%</Progress>\n    </GridItem>\n    <GridItem>\n      <Progress percentage={20}  type=\"circle\">20%</Progress>\n    </GridItem>\n    <GridItem>\n      <Progress percentage={90}  type=\"circle\" >90%</Progress>\n    </GridItem>\n  </Grid>)\n`} \n          >\n          </HighlightCode>\n      </code></pre>\n</CodeExample><h2 id=\"%E5%8F%98%E5%8C%96%E7%9A%84%E8%BF%9B%E5%BA%A6%E6%9D%A1\" tabIndex=\"-1\"><a className=\"header-anchor\" href=\"#%E5%8F%98%E5%8C%96%E7%9A%84%E8%BF%9B%E5%BA%A6%E6%9D%A1\">\n          <span className=\"b-anchor\"></span>\n          <span aria-hidden=\"false\">#</span>\n        </a> 变化的进度条</h2>\n\n            <CodeExample\n              desc={`sdaf`}\n              lang={`tsx`}\n              example={<>\n                  <style>{`.otaku-grid {\n  align-items: center;\n  justify-items: center;\n}\n`}</style>\n                  <Demo5 />\n                </>}\n              code={`import { Progress, Grid, GridItem, Button, InputNumber } from 'otaku-ui'\nimport { useState } from 'react'\n\nfunction Demo () {\n  let [progress, setProgress] = useState(0)\n\n  return (\n    <>\n      <InputNumber value={progress} step={10} onChange={val => {\n        setProgress(val)\n      }}></InputNumber>\n      <Grid className=\"demo-progress\">\n        <GridItem>\n          <Progress percentage={progress}  type=\"circle\"></Progress>\n        </GridItem>\n        <GridItem>\n          <Progress percentage={progress}></Progress>\n        </GridItem>\n        <GridItem>\n          <Progress percentage={progress}  direction=\"vertical\"></Progress>\n        </GridItem>\n      </Grid>\n\n    </>\n  )\n}\n\nReactDOM.createRoot(container).render(<Demo/>)\n`}\n              style={{\n                lang: `css`,\n                code: `.otaku-grid {\n  align-items: center;\n  justify-items: center;\n}\n`\n              }}\n            >\n          <p>sdaf</p>\n<pre><code className=\"language-tsx\">\n          <HighlightCode\n            lang={`tsx`}\n            code={`\nfunction Demo () {\n  let [progress, setProgress] = useState(0)\n\n  return (\n    <>\n      <InputNumber value={progress} step={10} onChange={val => {\n        setProgress(val)\n      }}></InputNumber>\n      <Grid className=\"demo-progress\">\n        <GridItem>\n          <Progress percentage={progress}  type=\"circle\"></Progress>\n        </GridItem>\n        <GridItem>\n          <Progress percentage={progress}></Progress>\n        </GridItem>\n        <GridItem>\n          <Progress percentage={progress}  direction=\"vertical\"></Progress>\n        </GridItem>\n      </Grid>\n\n    </>\n  )\n}\n\nReactDOM.createRoot(container).render(<Demo/>)\n`} \n          >\n          </HighlightCode>\n      </code></pre>\n<pre><code className=\"language-css\">\n          <HighlightCode\n            lang={`css`}\n            code={`.otaku-grid {\n  align-items: center;\n  justify-items: center;\n}\n`} \n          >\n          </HighlightCode>\n      </code></pre>\n</CodeExample><h2 id=\"api\" tabIndex=\"-1\"><a className=\"header-anchor\" href=\"#api\">\n          <span className=\"b-anchor\"></span>\n          <span aria-hidden=\"false\">#</span>\n        </a> api</h2>\n<>\n            <Api \n              code={`interface ProgressProps {\r\n  inner?: boolean\r\n  percentage?: number\r\n  max?: number\r\n  color?: string\r\n  type?: 'circle'\r\n  direction?: 'vertical' | 'horizontal'\r\n  lineWidth?: number\r\n}`}\n              data={`[{\"name\":\"Progress\",\"data\":[{\"name\":\"inner\",\"type\":\"boolean\",\"required\":false,\"typeReference\":null,\"jsDoc\":[]},{\"name\":\"percentage\",\"type\":\"number\",\"required\":false,\"defaultValue\":\"0\",\"typeReference\":null,\"jsDoc\":[]},{\"name\":\"max\",\"type\":\"number\",\"required\":false,\"defaultValue\":\"100\",\"typeReference\":null,\"jsDoc\":[]},{\"name\":\"color\",\"type\":\"string\",\"required\":false,\"typeReference\":null,\"jsDoc\":[]},{\"name\":\"type\",\"type\":\"'circle'\",\"required\":false,\"typeReference\":null,\"jsDoc\":[]},{\"name\":\"direction\",\"type\":\"'vertical' | 'horizontal'\",\"required\":false,\"defaultValue\":\"horizontal\",\"typeReference\":null,\"jsDoc\":[]},{\"name\":\"lineWidth\",\"type\":\"number\",\"required\":false,\"defaultValue\":\"8\",\"typeReference\":null,\"jsDoc\":[]}]}]`}\n              ></Api></></div>\n            \n              <Anchor target=\".main\">\n                <AnchorItem \n                      href={`#progress-进度条`}\n                      title={`Progress 进度条`}></AnchorItem><AnchorItem \n                      href={`#自定义文字`}\n                      title={`自定义文字`}></AnchorItem><AnchorItem \n                      href={`#进度条内显示文字`}\n                      title={`进度条内显示文字`}></AnchorItem><AnchorItem \n                      href={`#自定义颜色`}\n                      title={`自定义颜色`}></AnchorItem><AnchorItem \n                      href={`#垂直的进度条`}\n                      title={`垂直的进度条`}></AnchorItem><AnchorItem \n                      href={`#圆形进度条`}\n                      title={`圆形进度条`}></AnchorItem><AnchorItem \n                      href={`#变化的进度条`}\n                      title={`变化的进度条`}></AnchorItem><AnchorItem \n                      href={`#api`}\n                      title={`api`}></AnchorItem>\n              </Anchor>\n            \n          </>\n        )\n      }\n      \n      export default MdReact\n    "],"names":["Progress","Grid","GridItem","Button","InputNumber","useState","React","Block","Api","HighlightCode","Anchor","AnchorItem","CodeExample","Demo0","Demo1","arr","map","row","index","column","columnIndex","includes","Demo2","current","score","text","Demo3","show","setShow","miku","Example4","tableData","name","required","type","defaultValue","desc","tableColumn","label","prop","render","data","require","Demo5","progress","setProgress","val","MdReact","lang","code"],"sourceRoot":""}